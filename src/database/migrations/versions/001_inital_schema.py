"""inital schema

Revision ID: 001
Revises:
Create Date: 2025-05-18 12:47:59.663992

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('e_mail', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender_enum'), nullable=True),
    sa.Column('level', sa.Enum('FIRST', 'SECOND', 'MINKAIFA', 'COMPETITION', 'START', name='user_level_enum'), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'CURATOR', 'USER', name='user_role_enum'), nullable=False),
    sa.PrimaryKeyConstraint('telegram_id'),
    sa.UniqueConstraint('e_mail'),
    sa.UniqueConstraint('telegram_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('subscriptions',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('subscription_type', sa.Enum('STANDARD', 'WITH_CURATOR', 'START_FULL', 'START_MONTH', name='sub_type_enum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'FROZEN', 'EXPIRED', 'UNREGISTERED', name='sub_status_enum'), nullable=False),
    sa.Column('registered_date', sa.Date(), server_default=sa.text('now()'), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('start_program_begin_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sub_id', sa.BigInteger(), nullable=False),
    sa.Column('sub_type', sa.Enum('STANDARD', 'WITH_CURATOR', 'START_FULL', 'START_MONTH', name='sub_type_enum'), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='paymentstatus'), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['sub_id'], ['subscriptions.user_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('subscriptions')
    op.drop_table('users')
    # ### end Alembic commands ###
