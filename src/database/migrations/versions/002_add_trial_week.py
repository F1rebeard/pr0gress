"""add_trial_week

Revision ID: 002
Revises: 001
Create Date: 2025-05-28 21:52:13.382364

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '002'
down_revision: Union[str, None] = '001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('free_trials',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('telegram_id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('trial_workouts',
    sa.Column('workout_id', sa.BigInteger(), nullable=False),
    sa.Column('position', sa.BigInteger(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('workout_id'),
    sa.UniqueConstraint('position')
    )
    op.create_unique_constraint("sub_user_id", 'subscriptions', ['user_id'])
    op.create_unique_constraint("user_tg_id", 'users', ['telegram_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("sub_user_id", 'users', type_='unique')
    op.drop_constraint("user_tg_id", 'subscriptions', type_='unique')
    op.drop_table('trial_workouts')
    op.drop_table('free_trials')
    # ### end Alembic commands ###
